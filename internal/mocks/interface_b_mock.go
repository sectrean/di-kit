// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// InterfaceBMock is an autogenerated mock type for the InterfaceB type
type InterfaceBMock struct {
	mock.Mock
}

type InterfaceBMock_Expecter struct {
	mock *mock.Mock
}

func (_m *InterfaceBMock) EXPECT() *InterfaceBMock_Expecter {
	return &InterfaceBMock_Expecter{mock: &_m.Mock}
}

// B provides a mock function with given fields:
func (_m *InterfaceBMock) B() {
	_m.Called()
}

// InterfaceBMock_B_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'B'
type InterfaceBMock_B_Call struct {
	*mock.Call
}

// B is a helper method to define mock.On call
func (_e *InterfaceBMock_Expecter) B() *InterfaceBMock_B_Call {
	return &InterfaceBMock_B_Call{Call: _e.mock.On("B")}
}

func (_c *InterfaceBMock_B_Call) Run(run func()) *InterfaceBMock_B_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *InterfaceBMock_B_Call) Return() *InterfaceBMock_B_Call {
	_c.Call.Return()
	return _c
}

func (_c *InterfaceBMock_B_Call) RunAndReturn(run func()) *InterfaceBMock_B_Call {
	_c.Call.Return(run)
	return _c
}

// Close provides a mock function with given fields: _a0
func (_m *InterfaceBMock) Close(_a0 context.Context) {
	_m.Called(_a0)
}

// InterfaceBMock_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type InterfaceBMock_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
//   - _a0 context.Context
func (_e *InterfaceBMock_Expecter) Close(_a0 interface{}) *InterfaceBMock_Close_Call {
	return &InterfaceBMock_Close_Call{Call: _e.mock.On("Close", _a0)}
}

func (_c *InterfaceBMock_Close_Call) Run(run func(_a0 context.Context)) *InterfaceBMock_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *InterfaceBMock_Close_Call) Return() *InterfaceBMock_Close_Call {
	_c.Call.Return()
	return _c
}

func (_c *InterfaceBMock_Close_Call) RunAndReturn(run func(context.Context)) *InterfaceBMock_Close_Call {
	_c.Call.Return(run)
	return _c
}

// NewInterfaceBMock creates a new instance of InterfaceBMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterfaceBMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *InterfaceBMock {
	mock := &InterfaceBMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
