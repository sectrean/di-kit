// Code generated by mockery v2.29.0. DO NOT EDIT.

package testtypes

import mock "github.com/stretchr/testify/mock"

// MockFooService is an autogenerated mock type for the FooService type
type MockFooService struct {
	mock.Mock
}

type MockFooService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFooService) EXPECT() *MockFooService_Expecter {
	return &MockFooService_Expecter{mock: &_m.Mock}
}

// Foo provides a mock function with given fields:
func (_m *MockFooService) Foo() {
	_m.Called()
}

// MockFooService_Foo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Foo'
type MockFooService_Foo_Call struct {
	*mock.Call
}

// Foo is a helper method to define mock.On call
func (_e *MockFooService_Expecter) Foo() *MockFooService_Foo_Call {
	return &MockFooService_Foo_Call{Call: _e.mock.On("Foo")}
}

func (_c *MockFooService_Foo_Call) Run(run func()) *MockFooService_Foo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockFooService_Foo_Call) Return() *MockFooService_Foo_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockFooService_Foo_Call) RunAndReturn(run func()) *MockFooService_Foo_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockFooService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFooService creates a new instance of MockFooService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFooService(t mockConstructorTestingTNewMockFooService) *MockFooService {
	mock := &MockFooService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
